{
  "permissions": {
    "allow": [
      "Bash(env)",
      "Bash(claude mcp list:*)",
      "Bash(claude mcp:*)",
      "WebSearch",
      "mcp__linear__list_teams",
      "mcp__linear__create_issue",
      "mcp__linear__get_team",
      "mcp__linear__list_issue_labels",
      "mcp__linear__list_projects",
      "mcp__linear__create_issue_label",
      "mcp__linear__create_project",
      "mcp__linear__get_issue",
      "WebFetch(domain:developers.eveonline.com)",
      "WebFetch(domain:community.eveonline.com)",
      "WebFetch(domain:support.eveonline.com)",
      "mcp__linear__update_issue",
      "mcp__linear__create_comment",
      "mcp__linear__list_issues",
      "WebFetch(domain:www.eveonline.com)",
      "Bash(pnpm --version:*)",
      "Bash(tsc:*)",
      "Bash(code:*)",
      "Bash(pnpm init:*)",
      "Bash(pnpm add:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(pnpm dev)",
      "Bash(openssl rand:*)",
      "Bash(docker-compose ps:*)",
      "Bash(pnpm prisma generate:*)",
      "Bash(timeout /t 3)",
      "Bash(pnpm prisma migrate dev:*)",
      "Bash(pnpm db:seed:*)",
      "Bash(pnpm typecheck)",
      "Bash(pnpm lint src/services/auth.service.ts src/utils/prisma.ts src/utils/config-validator.ts)",
      "Bash(pnpm tsc --noEmit src/services/auth.service.ts src/utils/prisma.ts src/utils/config-validator.ts)",
      "Bash(git commit -m \"EVE-64: Initial repository setup with backend infrastructure\n\n- Add comprehensive .gitignore for Node.js/TypeScript projects\n- Add .gitattributes for consistent line endings (LF)\n- Create GitHub Actions CI workflow (lint, typecheck, test, security)\n- Add PR template with quality gates checklist\n- Create comprehensive README.md with setup instructions\n- Add CONTRIBUTING.md with development workflow guidelines\n- Add MIT License\n- Include complete eve-nomad-backend with:\n  - OAuth 2.0 authentication system (EVE SSO)\n  - Prisma ORM with PostgreSQL schema\n  - Redis caching and BullMQ job processing\n  - Production-grade Pino logging with Sentry\n  - Custom domain error handling\n  - Token encryption with AES-256-GCM\n  - JWT session management\n  - ESI client service\n  - Code quality tooling (ESLint, Prettier, TypeScript strict)\n\nCloses EVE-64\")",
      "Bash(git tag -a v0.1.0-alpha -m \"Initial release: Backend infrastructure with OAuth authentication\n\nPhase 1 foundation complete with:\n- OAuth 2.0 authentication (EVE SSO)\n- Database infrastructure (Prisma + PostgreSQL)\n- Background job processing (BullMQ + Redis)\n- Production logging and monitoring (Pino + Sentry)\n- Code quality improvements (EVE-65 through EVE-69)\n- Developer tooling and documentation\")",
      "Bash(gh repo edit UlyasPendragon/eve-online-tool --add-topic eve-online --add-topic esi-api --add-topic typescript --add-topic fastify --add-topic mobile-app --add-topic nodejs)",
      "Bash(gh repo edit UlyasPendragon/eve-online-tool --enable-issues --enable-discussions)",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool/vulnerability-alerts -X PUT)",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool/automated-security-fixes -X PUT)",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool)",
      "Bash(gh repo view UlyasPendragon/eve-online-tool --json name,visibility,hasIssuesEnabled,hasDiscussionsEnabled,securityAndAnalysis)",
      "Bash(gh repo view UlyasPendragon/eve-online-tool --json name,visibility,hasIssuesEnabled,hasDiscussionsEnabled,repositoryTopics)",
      "Bash(gh repo edit UlyasPendragon/eve-online-tool --visibility public)",
      "Bash(gh repo edit UlyasPendragon/eve-online-tool --visibility public --accept-visibility-change-consequences)",
      "Bash(gh api user/installations)",
      "Bash(gh api /repos/UlyasPendragon/eve-online-tool/installation)",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool/installation)",
      "Bash(git commit --allow-empty -m \"EVE-64: Test Linear-GitHub integration\n\nThis commit verifies that the Linear-GitHub integration is working correctly.\nCommits referencing Linear issue IDs should automatically appear in the issue activity feed.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git push origin main)",
      "Bash(gh run list --limit 1)",
      "Bash(gh run view 18731879932)",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool --jq '.permissions')",
      "Bash(gh api repos/UlyasPendragon/eve-online-tool/actions/permissions)",
      "Bash(gh run rerun 18731879932)",
      "Bash(gh run view 18731879932 --log-failed)",
      "Bash(pnpm prisma migrate deploy)",
      "Bash(test:*)",
      "Bash(curl:*)",
      "Bash(npx create-expo-app@latest eve-nomad-mobile --template blank-typescript)",
      "Bash(pnpm install:*)",
      "Bash(pnpm format:*)",
      "Bash(npx expo:*)",
      "Bash(node test-api.js:*)",
      "Bash(del:*)",
      "Bash(gh repo view:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(tee:*)",
      "Bash(cut:*)"
    ],
    "deny": [],
    "ask": []
  }
}
